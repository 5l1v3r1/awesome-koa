{
  "name": "wesome Koa.js Web Framework",
  "tagline": "Awesome Koa.js Web Framework",
  "body": "![awesome koa](https://github.frapsoft.com/top/awesome-koa.jpg)\r\n\r\n# Awesome Koa [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome) [![Javascript](https://badges.frapsoft.com/javascript/code/javascript.svg?v=100)](https://github.com/ellerbrock/javascript-badges/) [![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=102)](https://github.com/ellerbrock/open-source-badges/) [![Gitter Chat](https://badges.gitter.im/frapsoft/frapsoft.svg)](https://gitter.im/frapsoft/frapsoft/)\r\n\r\n> Useful resources for creating apps and working with [Koa](http://koajs.com) \r\n\r\n  - [Links](#links)\r\n  - [Examples & Boilerplates](#examples--boilerplates)\r\n  - [Middleware](#middleware)\r\n  - [Others](#others)\r\n  - [Videos](#videos)\r\n\r\n## Status\r\n\r\n[![Deadlink Test](https://travis-ci.org/ellerbrock/awesome-koa.svg?branch=master)](https://travis-ci.org/ellerbrock/awesome-koa)\r\n\r\n**Info:** Green Build Status means there should be no Deadlinks in this List.<br>\r\nYou can find the Testfiles on [travis-deadlink-scanner](https://github.com/ellerbrock/travis-deadlink-scanner).\r\n\r\n## Links\r\n\r\n- [Koa](https://github.com/koajs/koa) - Expressive middleware for node.js using generators\r\n- [co](https://github.com/tj/co) - The ultimate generator based flow-control goodness for nodejs\r\n\r\n  **Info:** The cutting edge stuff is in the [2x](https://github.com/koajs/koa/tree/v2.x) Branch.<br>\r\n  Make sure to install your middleware and extensions with `npm package@next` to avoid breaking things ...\r\n\r\n## Examples & Boilerplates\r\n\r\n- [api-boilerplate](https://github.com/koajs/api-boilerplate) - API application boilerplate\r\n- [kick-off-koa](https://github.com/koajs/kick-off-koa) - An intro to koa via a set of self-guided workshops\r\n- [workshop](https://github.com/koajs/workshop) - Koa Training Workshop\r\n- [examples](https://github.com/koajs/examples) - Example Koa apps\r\n- [babel-es6-es7-npm-skeleton](https://github.com/ellerbrock/babel-es6-es7-npm-skeleton) - Babel ES6 / ES7 - Testing, Benchmark, Auto Reload, Linting\r\n\r\n  **Info:** Lots of the Examples and Boilerplattes are outdated.<br>\r\n  Also some of the features not work straight out of the Box with the new Version.<br>\r\n  I'm working on a Boilerplatte with all the cutting edge stuff and will publish it later on my [GitHub Account](https://github.com/ellerbrock).\r\n\r\n## Middleware\r\n\r\n- [accesslog](https://github.com/koajs/accesslog) - Middleware for common log format access logs\r\n- [api-boilerplate](https://github.com/koajs/api-boilerplate) - API application boilerplate\r\n- [atomic-session](https://github.com/koajs/atomic-session) - Atomic sessions for Koa\r\n- [badgeboard](https://github.com/koajs/badgeboard)\r\n- [basic-auth](https://github.com/koajs/basic-auth) - blanket basic auth middleware\r\n- [body-parsers](https://github.com/koajs/body-parsers) - collection of koa body parsers\r\n- [bodyparser](https://github.com/koajs/bodyparser) - a body parser for koa\r\n- [bundle](https://github.com/koajs/bundle) - Generic asset pipeline with caching, etags, minification, gzipping and sourcemaps.\r\n- [bunyan-logger](https://github.com/koajs/bunyan-logger) - Koa middleware for bunyan request logging\r\n- [cash](https://github.com/koajs/cash) - HTTP response caching for Koa\r\n- [charset](https://github.com/koajs/charset) - use iconv-lite to encode the body and set charset to content-type\r\n- [cluster](https://github.com/koajs/cluster) - Koa clustering and error handling utility\r\n- [compose](https://github.com/koajs/compose) - Middleware composition utility\r\n- [compress](https://github.com/koajs/compress) - Compress middleware for koa\r\n- [conditional-get](https://github.com/koajs/conditional-get) - Conditional GET middleware for koa\r\n- [convert](https://github.com/koajs/convert) - Convert koa generator-based middleware to promise-based middleware\r\n- [cors](https://github.com/koajs/cors) - Cross-Origin Resource Sharing(CORS) for koa\r\n- [cross-cookies](https://github.com/koajs/cross-cookies) - Easily set cookies across subdomains\r\n- [csrf](https://github.com/koajs/csrf) - CSRF tokens for koa\r\n- [ctx-basic-auth](https://github.com/koajs/ctx-basic-auth) - Augments Koa with ctx.basicAuth\r\n- [ctx-cache-control](https://github.com/koajs/ctx-cache-control) - Augment Koa with ctx.cacheControl(maxAge)\r\n- [ctx-paginate](https://github.com/koajs/ctx-paginate) - Augments Koa with ctx.paginate\r\n- [ejs](https://github.com/koajs/ejs) - a koa view render middleware, support all feature of ejs\r\n- [error](https://github.com/koajs/error) - Error response middleware (text, json, html)\r\n- [etag](https://github.com/koajs/etag) - ETag support for Koa responses\r\n- [examples](https://github.com/koajs/examples) - Example Koa apps\r\n- [favicon](https://github.com/koajs/favicon) - Koa middleware for serving a favicon\r\n- [file-server](https://github.com/koajs/file-server) - file serving middleware for koa\r\n- [generic-session](https://github.com/koajs/generic-session) - koa session store with memory, redis or others.\r\n- [html-minifier](https://github.com/koajs/html-minifier) - minify HTML responses like some crazy guy\r\n- [is-json](https://github.com/koajs/is-json) - check if a koa body should be interpreted as JSON\r\n- [joi-router](https://github.com/koajs/joi-router) - Configurable, input and output validated routing for koa\r\n- [json](https://github.com/koajs/json) - pretty-printed JSON response middleware\r\n- [json-error](https://github.com/koajs/json-error) - Error handler for pure-JSON apps\r\n- [json-filter](https://github.com/koajs/json-filter) - Middleware allowing the client to filter the response to only what they need, reducing the amount of traffic over the wire.\r\n- [jwt](https://github.com/koajs/jwt) - Koa middleware for validating JSON Web Tokens\r\n- [kick-off-koa](https://github.com/koajs/kick-off-koa) - An intro to koa via a set of self-guided workshops\r\n- [koa](https://github.com/koajs/koa) - Expressive middleware for node.js using generators\r\n- [koa-fresh](https://github.com/koajs/koa-fresh) - koa-fresh: HTTP response freshness testing middleware base on koa and node-fresh\r\n- [koa-github](https://github.com/koajs/koa-github) - simple github auth middleware for koa\r\n- [koa-lusca](https://github.com/koajs/koa-lusca) - koa version of lusca. Application security for koa.\r\n- [koa-markdown](https://github.com/koajs/koa-markdown) - Auto convert markdown to html for koa. Inspired by connect-markdown\r\n- [koa-range](https://github.com/koajs/koa-range) - range request implementation for koa, see <http://tools.ietf.org/html/rfc7233>\r\n- [koa-redis](https://github.com/koajs/koa-redis) - koa session with redis\r\n- [koa-roles](https://github.com/koajs/koa-roles) - koa version of Connect-Roles\r\n- [koa-rt](https://github.com/koajs/koa-rt) - koa rt with microtime\r\n- [koa-safe-jsonp](https://github.com/koajs/koa-safe-jsonp) - Safe jsonp plusins for koa.\r\n- [koa.io](https://github.com/koajs/koa.io) - Realtime web framework combine koa and socket.io.\r\n- [koala](https://github.com/koajs/koala) - [SEEKING MAINTAINER] An HTTP/2 and ES6 Module-ready Koa Suite\r\n- [locales](https://github.com/koajs/locales) - koa locales, i18n solution for koa\r\n- [logger](https://github.com/koajs/logger) - Development style logging middleware\r\n- [maxrequests](https://github.com/koajs/maxrequests) - Limit max requests on each http keepalive connection.\r\n- [middleware-hook](https://github.com/koajs/middleware-hook) - low-level hooks for your middleware\r\n- [mock](https://github.com/koajs/mock) - Simple web page mock middleware\r\n- [mount](https://github.com/koajs/mount) - Mount other Koa applications or middleware to a given pathname\r\n- [onerror](https://github.com/koajs/onerror) - an error handler for koa, hack ctx.onerror\r\n- [override-method](https://github.com/koajs/override-method) - method override utility for koa\r\n- [parameter](https://github.com/koajs/parameter) - parameter validate middleware for koa, powered by parameter\r\n- [path-match](https://github.com/koajs/path-match) - koa route middleware\r\n- [qs](https://github.com/koajs/qs) - qs for koa, and use querystring more safely.\r\n- [querystring-strict](https://github.com/koajs/querystring-strict) - THIS REPOSITORY IS NOW DEPRECATED\r\n- [ratelimit](https://github.com/koajs/ratelimit) - Rate limiter middleware\r\n- [react-view](https://github.com/koajs/react-view) - A Koa view engine which renders React components on server\r\n- [redis-session-sets](https://github.com/koajs/redis-session-sets) - Koa Redis sessions with field-referencing cross sets\r\n- [resourcer](https://github.com/koajs/resourcer) - A simple resource directory mounter for koa.\r\n- [resourcer-docs](https://github.com/koajs/resourcer-docs) - Simple app that generates documentation for routes mounted using koa-resourcer.\r\n- [response-time](https://github.com/koajs/response-time) - X-Response-Time middleware\r\n- [rewrite](https://github.com/koajs/rewrite) - URL rewriting middleware\r\n- [route](https://github.com/koajs/route) - Simple route middleware\r\n- [s3-cache](https://github.com/koajs/s3-cache) - Koa middleware to cache and serve from S3\r\n- [send](https://github.com/koajs/send) - Transfer static files\r\n- [sendfile](https://github.com/koajs/sendfile) - basic file-sending utility for koa\r\n- [session](https://github.com/koajs/session) - Simple cookie-based session middleware\r\n- [snapshot](https://github.com/koajs/snapshot) - take snapshot when request, cache by request path.\r\n- [stateless-csrf](https://github.com/koajs/stateless-csrf) - CSRF without sessions.\r\n- [static](https://github.com/koajs/static) - Static file server middleware\r\n- [static-cache](https://github.com/koajs/static-cache) - Static cache for koa\r\n- [statsd](https://github.com/koajs/statsd) - Statsd middleware\r\n- [timer](https://github.com/koajs/timer) - time your middleware\r\n- [todo](https://github.com/koajs/todo) - a todo example write with koa and react\r\n- [trace](https://github.com/koajs/trace) - generic tracing for koa\r\n- [trace-influxdb](https://github.com/koajs/trace-influxdb) - InfluxDB tracing for koa-trace\r\n- [trie-router](https://github.com/koajs/trie-router) - Trie-routing for Koa\r\n- [userauth](https://github.com/koajs/userauth) - koa user auth middleware\r\n- [workshop](https://github.com/koajs/workshop) - Koa Training Workshop\r\n\r\n## Generators\r\n\r\n- [Generators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator) - Mozilla Developer Network (MDN)\r\n\r\n## Videos\r\n\r\n- [KnowThen](http://knowthen.com/category/node-js/) - Videos about Koa and Generators\r\n- [Generators in JavaScript](https://youtu.be/ategZqxHkz4) - What, Why and How\r\n\r\n## Other Web Development Lists\r\n\r\n- [Atom for Web Developer](https://github.com/ellerbrock/atom-for-webdeveloper) - Useful Packages and Configuration for a better Workflow\r\n- [Node.js for Web Developers](https://github.com/ellerbrock/nodejs-for-webdeveloper) - Full Stack Javascript Development with Node.js\r\n- [Chrome Extensions for Web Developer](https://github.com/ellerbrock/chrome-extensions-for-webdeveloper) - A list with useful Chrome Extensions\r\n- [Publishing NPM Packages for Developers](https://github.com/ellerbrock/publishing-npm-packages) - Introduction how to write and publish npm Modules.\r\n- [Awesome Typescript](https://github.com/ellerbrock/awesome-typescript) - A collection of awesome TypeScript resources.\r\n- [Docker Tutorial](https://github.com/ellerbrock/docker-tutorial) - Getting Started with Docker.\r\n- [Fish Shell Setup OS X](https://github.com/ellerbrock/fish-shell-setup-osx) - Terminal Setup for OS X with Fish Shell, Fisherman, Powerline Fonts and iTerm2.\r\n\r\n### Contact / Social Media\r\n\r\n_Get the latest News about Web Development, Open Source, Tooling, Server & Security_\r\n\r\n[![Twitter](https://github.frapsoft.com/social/twitter.png)](https://twitter.com/frapsoft/)[![Facebook](https://github.frapsoft.com/social/facebook.png)](https://www.facebook.com/frapsoft/)[![Google+](https://github.frapsoft.com/social/google-plus.png)](https://plus.google.com/116540931335841862774)[![Gitter](https://github.frapsoft.com/social/gitter.png)](https://gitter.im/frapsoft/frapsoft/)[![Github](https://github.frapsoft.com/social/github.png)](https://github.com/ellerbrock/)\r\n\r\n### Development by\r\n\r\nDeveloper / Author: [Maik Ellerbrock](https://github.com/ellerbrock/)<br>\r\nCompany: [Frapsoft](https://github.com/frapsoft/)\r\n\r\n### License\r\n\r\n[![Creative Commons License](https://i.creativecommons.org/l/by/4.0/88x31.png)](http://creativecommons.org/licenses/by/4.0/)<br>\r\n\r\nThis work by [Maik Ellerbrock](https://github.com/ellerbrock/) is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}